apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgis.fullname" . }}
  labels:
{{ include "postgis.labels" . | indent 4 }}
spec:
  serviceName: {{ include "postgis.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "postgis.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "postgis.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5432
              name: postgres
              protocol: TCP
          env:
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgres.password }}"
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.user }}"
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            timeoutSeconds: 3 # setting to default timeout of pg_isready
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            timeoutSeconds: 3 # setting to default timeout of pg_isready
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: data
            mountPath: /var/lib/postgresql/data
            subPath: data
          {{- if .Values.postgres.customInit.enabled }}
          - name: init
            mountPath: /docker-entrypoint-initdb.d/
          {{- end }}
      {{- if .Values.postgres.customInit.enabled }}
      volumes:
        - name: init
          configMap:
            name: {{ include "postgis.fullname" . }}
            items:
              - key: init.sql
                path: init.sql
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
