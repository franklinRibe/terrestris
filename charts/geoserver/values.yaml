replicaCount: 1

image:
  repository: terrestris/geoserver
  tag: 2.21.2
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/enable-cors: "true"
  hosts:
    - host: geoserver.example.com
      paths: [ "/" ]
  tls:
    - secretName: geoserver-secret
      hosts:
        - geoserver.example.com

resources:
  limits:
    cpu: 2500m
    memory: 8Gi
  requests:
    cpu: 500m
    memory: 8Gi

nodeSelector: {}

tolerations: []

affinity: {}

environment:
  stableExtensions: geofence-server,importer,sec-keycloak
  # replace example.com with your host
  javaOptions: -Xms1g -Xmx2g -DGEOSERVER_CSRF_WHITELIST=localhost,example.com

storage:
  datadir: /opt/geoserver_data
#   initDataUrl: https://files.example.com/geoserver_data.tgz

# optional existing pvc for persistent geoserver data
persistence:
  enabled: false
  useExisting: false
  existingPvcName: ""
  storageClassName: ""
  accessMode: ReadWriteOnce
  size: 8Gi

probes:
  # liveness url should be for example a GetMap request to a layer
  livenessUrl: /geoserver/ows?request=getCapabilities&service=WMS
  readinessUrl: /geoserver/ows?request=getCapabilities&service=WMS
  startupUrl: /geoserver/ows?request=getCapabilities&service=WMS
