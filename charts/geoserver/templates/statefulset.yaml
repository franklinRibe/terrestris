apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "geoserver.fullname" . }}
  labels:
{{ include "geoserver.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "geoserver.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "geoserver.fullname" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "geoserver.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
        {{- with .Values.storage.initDataUrl }}
        - name: download-data
          image: alpine
          command: ["/bin/sh","/mnt/init-data.sh"]
          volumeMounts:
            - name: temp
              mountPath: /mnt/download
            - name: init-configmap
              mountPath: /mnt/
            - name: datadir
              mountPath: {{ .Values.storage.datadir }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: STABLE_EXTENSIONS
              value: {{ .Values.environment.stableExtensions }}
            - name: EXTRA_JAVA_OPTS
              value: {{ .Values.environment.javaOptions }}
            {{- with .Values.extraEnv }}
            {{- tpl . $ | nindent 12 }}
            {{- end }}
          envFrom:
            {{- with .Values.extraEnvFrom }}
            {{- tpl . $ | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readinessUrl }}
              port: http
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.livenessUrl }}
              port: http
              httpHeaders:
                - name: Accept
                  value: image/png
            failureThreshold: 1
            periodSeconds: 60
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: datadir
              mountPath: {{ .Values.storage.datadir }}
      volumes:
        - name: temp
          emptyDir: {}
        - name: init-configmap
          configMap:
            name: {{ include "geoserver.fullname" . }}
            items:
              - key: init-data.sh
                path: init-data.sh
        {{- if and .Values.persistence.enabled (not .Values.persistence.useExisting) }}
        - name: datadir
          persistentVolumeClaim:
            claimName: {{ include "geoserver.fullname" . }}
        {{- else if and .Values.persistence.useExisting (.Values.persistence.existingPvcName) }}
        - name: datadir
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingPvcName }}
        {{- else }}
        - name: datadir
          emptyDir: {}
        {{- end }}
